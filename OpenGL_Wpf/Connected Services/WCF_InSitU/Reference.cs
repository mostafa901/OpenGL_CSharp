//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Simple_Engine.WCF_InSitU {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://InSitU.Views.ThreeD", ConfigurationName="WCF_InSitU.IWcf_InSitu")]
    public interface IWcf_InSitu {
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://InSitU.Views.ThreeD/IWcf_InSitu/Add", ReplyAction="http://InSitU.Views.ThreeD/IWcf_InSitu/AddResponse")]
        double Add(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://InSitU.Views.ThreeD/IWcf_InSitu/Add", ReplyAction="http://InSitU.Views.ThreeD/IWcf_InSitu/AddResponse")]
        System.Threading.Tasks.Task<double> AddAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://InSitU.Views.ThreeD/IWcf_InSitu/Subtract", ReplyAction="http://InSitU.Views.ThreeD/IWcf_InSitu/SubtractResponse")]
        double Subtract(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://InSitU.Views.ThreeD/IWcf_InSitu/Subtract", ReplyAction="http://InSitU.Views.ThreeD/IWcf_InSitu/SubtractResponse")]
        System.Threading.Tasks.Task<double> SubtractAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://InSitU.Views.ThreeD/IWcf_InSitu/Multiply", ReplyAction="http://InSitU.Views.ThreeD/IWcf_InSitu/MultiplyResponse")]
        double Multiply(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://InSitU.Views.ThreeD/IWcf_InSitu/Multiply", ReplyAction="http://InSitU.Views.ThreeD/IWcf_InSitu/MultiplyResponse")]
        System.Threading.Tasks.Task<double> MultiplyAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://InSitU.Views.ThreeD/IWcf_InSitu/ListDocument", ReplyAction="http://InSitU.Views.ThreeD/IWcf_InSitu/ListDocumentResponse")]
        void ListDocument(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://InSitU.Views.ThreeD/IWcf_InSitu/ListDocument", ReplyAction="http://InSitU.Views.ThreeD/IWcf_InSitu/ListDocumentResponse")]
        System.Threading.Tasks.Task ListDocumentAsync(System.Guid guid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcf_InSituChannel : Simple_Engine.WCF_InSitU.IWcf_InSitu, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Wcf_InSituClient : System.ServiceModel.ClientBase<Simple_Engine.WCF_InSitU.IWcf_InSitu>, Simple_Engine.WCF_InSitU.IWcf_InSitu {
        
        public Wcf_InSituClient() {
        }
        
        public Wcf_InSituClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Wcf_InSituClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Wcf_InSituClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Wcf_InSituClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Add(double n1, double n2) {
            return base.Channel.Add(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> AddAsync(double n1, double n2) {
            return base.Channel.AddAsync(n1, n2);
        }
        
        public double Subtract(double n1, double n2) {
            return base.Channel.Subtract(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> SubtractAsync(double n1, double n2) {
            return base.Channel.SubtractAsync(n1, n2);
        }
        
        public double Multiply(double n1, double n2) {
            return base.Channel.Multiply(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> MultiplyAsync(double n1, double n2) {
            return base.Channel.MultiplyAsync(n1, n2);
        }
        
        public void ListDocument(System.Guid guid) {
            base.Channel.ListDocument(guid);
        }
        
        public System.Threading.Tasks.Task ListDocumentAsync(System.Guid guid) {
            return base.Channel.ListDocumentAsync(guid);
        }
    }
}
